{"ast":null,"code":"var _jsxFileName = \"/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/components/ImageGrid/ImageGrid.tsx\";\nimport styles from './ImageGrid.module.css';\nimport { Hourglass } from 'react-loader-spinner';\nimport { getImageDetailsArray } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageGrid = props => {\n  let imageDetails = [];\n\n  if (!props.isloading && props.data) {\n    imageDetails = getImageDetailsArray(props.data);\n  }\n\n  console.log(imageDetails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.imageGrid,\n    children: props.isloading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spinner,\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Hourglass, {\n        colors: ['#0ACA87 ', '#0ACA87 '],\n        height: \"110\",\n        width: \"110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageDetails.forEach(imageData => {\n        var _imageData$options;\n\n        /*#__PURE__*/\n        _jsxDEV(\"img\", {\n          src: (_imageData$options = imageData.options) === null || _imageData$options === void 0 ? void 0 : _imageData$options.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/components/ImageGrid/ImageGrid.tsx"],"names":["styles","Hourglass","getImageDetailsArray","ImageGrid","props","imageDetails","isloading","data","console","log","imageGrid","spinner","forEach","imageData","options","url"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAGA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,oBAAT,QAAqC,aAArC;;AAMA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAClD,MAAIC,YAAqB,GAAG,EAA5B;;AACA,MAAI,CAACD,KAAK,CAACE,SAAP,IAAoBF,KAAK,CAACG,IAA9B,EAAoC;AAClCF,IAAAA,YAAY,GAAGH,oBAAoB,CAACE,KAAK,CAACG,IAAP,CAAnC;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACU,SAAvB;AAAA,cACGN,KAAK,CAACE,SAAN,gBACC;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACW,OAAvB;AAAgC,qBAAY,QAA5C;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAE,CAAC,UAAD,EAAa,UAAb,CADV;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC;AAAA,gBAAMN,YAAY,CAACO,OAAb,CAAqBC,SAAS,IAAI;AAAA;;AACtC;AAAA;AAAK,UAAA,GAAG,wBAAIA,SAAS,CAACC,OAAd,uDAAI,mBAAmBC;AAA/B;AAAA;AAAA;AAAA;AAAA;AACD,OAFK;AAAN;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvBM;KAAMZ,S","sourcesContent":["import styles from './ImageGrid.module.css';\n\nimport { Block } from '../../blocks';\nimport { Hourglass } from 'react-loader-spinner';\nimport { getImageDetailsArray } from '../../utils';\n\ntype ImageGridProps = {\n  data?: Block;\n  isloading?: boolean;\n};\nexport const ImageGrid = (props: ImageGridProps) => {\n  let imageDetails: Block[] = [];\n  if (!props.isloading && props.data) {\n    imageDetails = getImageDetailsArray(props.data);\n  }\n  console.log(imageDetails);\n  return (\n    <div className={styles.imageGrid}>\n      {props.isloading ? (\n        <div className={styles.spinner} data-testid=\"loader\">\n          <Hourglass\n            colors={['#0ACA87 ', '#0ACA87 ']}\n            height=\"110\"\n            width=\"110\"\n          />\n        </div>\n      ) : (\n        <div>{imageDetails.forEach(imageData => {\n          <img src = {imageData.options?.url}/>\n        })}</div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}