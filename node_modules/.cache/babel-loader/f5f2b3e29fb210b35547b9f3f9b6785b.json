{"ast":null,"code":"var _jsxFileName = \"/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/components/ImageGrid/ImageGrid.tsx\";\nimport styles from './ImageGrid.module.css';\nimport { Hourglass } from 'react-loader-spinner';\nimport { getImageDetailsArray } from '../../utils';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageGrid = props => {\n  let imageDetails = [];\n\n  if (!props.isloading && props.data) {\n    imageDetails = getImageDetailsArray(props.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.imageGrid,\n    children: props.isloading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spinner,\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Hourglass, {\n        colors: ['#0ACA87 ', '#0ACA87 '],\n        height: \"110\",\n        width: \"110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"image-grid-div\",\n      children: imageDetails.map((imageData, index) => {\n        var _imageData$data, _imageData$data2, _imageData$data3, _imageData$data4, _imageData$options;\n\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/block/${imageData.id}`,\n            state: {\n              id: imageData.id,\n              description: imageData === null || imageData === void 0 ? void 0 : (_imageData$data = imageData.data) === null || _imageData$data === void 0 ? void 0 : _imageData$data.description,\n              dimensions: (imageData === null || imageData === void 0 ? void 0 : (_imageData$data2 = imageData.data) === null || _imageData$data2 === void 0 ? void 0 : _imageData$data2.height) + \" X \" + (imageData === null || imageData === void 0 ? void 0 : (_imageData$data3 = imageData.data) === null || _imageData$data3 === void 0 ? void 0 : _imageData$data3.width),\n              createdAt: imageData === null || imageData === void 0 ? void 0 : (_imageData$data4 = imageData.data) === null || _imageData$data4 === void 0 ? void 0 : _imageData$data4.createdAt\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            width: 385,\n            style: {\n              marginLeft: \"12px\",\n              marginRight: \"12px\",\n              paddingTop: \"20px\"\n            },\n            height: 260,\n            src: (_imageData$options = imageData.options) === null || _imageData$options === void 0 ? void 0 : _imageData$options.url,\n            alt: `Image ${index}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"sources":["/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/components/ImageGrid/ImageGrid.tsx"],"names":["styles","Hourglass","getImageDetailsArray","Link","ImageGrid","props","imageDetails","isloading","data","imageGrid","spinner","map","imageData","index","pathname","id","state","description","dimensions","height","width","createdAt","marginLeft","marginRight","paddingTop","options","url"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAGA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAMA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAClD,MAAIC,YAAqB,GAAG,EAA5B;;AACA,MAAI,CAACD,KAAK,CAACE,SAAP,IAAoBF,KAAK,CAACG,IAA9B,EAAoC;AAClCF,IAAAA,YAAY,GAAGJ,oBAAoB,CAACG,KAAK,CAACG,IAAP,CAAnC;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,SAAvB;AAAA,cACGJ,KAAK,CAACE,SAAN,gBACC;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACU,OAAvB;AAAgC,qBAAY,QAA5C;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAE,CAAC,UAAD,EAAa,UAAb,CADV;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC;AAAK,qBAAY,gBAAjB;AAAA,gBACGJ,YAAY,CAACK,GAAb,CAAiB,CAACC,SAAD,EAAYC,KAAZ;AAAA;;AAAA,4BAChB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AACRC,YAAAA,QAAQ,EAAG,UAASF,SAAS,CAACG,EAAG,EADzB;AAERC,YAAAA,KAAK,EAAE;AAAED,cAAAA,EAAE,EAAEH,SAAS,CAACG,EAAhB;AAAoBE,cAAAA,WAAW,EAAEL,SAAF,aAAEA,SAAF,0CAAEA,SAAS,CAAEJ,IAAb,oDAAE,gBAAiBS,WAAlD;AAA+DC,cAAAA,UAAU,EAAE,CAAAN,SAAS,SAAT,IAAAA,SAAS,WAAT,gCAAAA,SAAS,CAAEJ,IAAX,sEAAiBW,MAAjB,IAA0B,KAA1B,IAAkCP,SAAlC,aAAkCA,SAAlC,2CAAkCA,SAAS,CAAEJ,IAA7C,qDAAkC,iBAAiBY,KAAnD,CAA3E;AAAqIC,cAAAA,SAAS,EAAET,SAAF,aAAEA,SAAF,2CAAEA,SAAS,CAAEJ,IAAb,qDAAE,iBAAiBa;AAAjK;AAFC,WAAV;AAAA,iCAIA;AACE,YAAA,KAAK,EAAI,GADX;AAEE,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAE,MAAb;AAAqBC,cAAAA,WAAW,EAAE,MAAlC;AAA0CC,cAAAA,UAAU,EAAE;AAAtD,aAFT;AAGE,YAAA,MAAM,EAAE,GAHV;AAKE,YAAA,GAAG,wBAAEZ,SAAS,CAACa,OAAZ,uDAAE,mBAAmBC,GAL1B;AAME,YAAA,GAAG,EAAG,SAAQb,KAAM;AANtB,aAIOA,KAJP;AAAA;AAAA;AAAA;AAAA;AAJA,WAGQA,KAHR;AAAA;AAAA;AAAA;AAAA,gBADgB;AAAA,OAAjB;AADH;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApCM;KAAMT,S","sourcesContent":["import styles from './ImageGrid.module.css';\n\nimport { Block } from '../../blocks';\nimport { Hourglass } from 'react-loader-spinner';\nimport { getImageDetailsArray } from '../../utils';\nimport { Link } from 'react-router-dom';\n\ntype ImageGridProps = {\n  data?: Block;\n  isloading?: boolean;\n};\nexport const ImageGrid = (props: ImageGridProps) => {\n  let imageDetails: Block[] = [];\n  if (!props.isloading && props.data) {\n    imageDetails = getImageDetailsArray(props.data);\n  }\n  return (\n    <div className={styles.imageGrid}>\n      {props.isloading ? (\n        <div className={styles.spinner} data-testid=\"loader\">\n          <Hourglass\n            colors={['#0ACA87 ', '#0ACA87 ']}\n            height=\"110\"\n            width=\"110\"\n          />\n        </div>\n      ) : (\n        <div data-testid=\"image-grid-div\">\n          {imageDetails.map((imageData, index) => (\n            <Link to={{\n              pathname: `/block/${imageData.id}`,\n              state: { id: imageData.id, description: imageData?.data?.description, dimensions: imageData?.data?.height + \" X \" + imageData?.data?.width, createdAt: imageData?.data?.createdAt },\n            }} key={index}>\n            <img\n              width = {385}\n              style={{marginLeft: \"12px\", marginRight: \"12px\", paddingTop: \"20px\"}}\n              height={260}\n              key={index}\n              src={imageData.options?.url}\n              alt={`Image ${index}`}\n            />\n            </Link>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}