{"ast":null,"code":"var _jsxFileName = \"/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/App.tsx\";\nimport { BrowserRouter as Router } from 'react-router-dom'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport { getBlocks } from './blocks';\nimport { Header } from './components/Header/Header';\nimport { InfoPanel } from './components/InfoPanel/InfoPanel';\nimport { ImageGrid } from './components/ImageGrid/ImageGrid';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [loading, setLoading] = useState(true);\nconst [data, setData] = useState(null);\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const blocksData = await getBlocks();\n      setData(blocksData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  fetchData();\n}, []);\nexport const App = () => {\n  console.log(loading);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(ImageGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amalmathew/Code/simpplr-fe/frontend-test-amalmathew91/src/App.tsx"],"names":["BrowserRouter","Router","getBlocks","Header","InfoPanel","ImageGrid","useEffect","useState","loading","setLoading","data","setData","fetchData","blocksData","error","console","App","log"],"mappings":";AAAA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC,C,CAEA;;AACA,SAAgBC,SAAhB,QAAiC,UAAjC;AAEA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,IAAD,CAAtC;AACE,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAe,IAAf,CAAhC;AAEAD,SAAS,CAAC,MAAM;AACd,QAAMM,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,UAAU,GAAG,MAAMX,SAAS,EAAlC;AACAS,MAAAA,OAAO,CAACE,UAAD,CAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KALD,SAKU;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GATD;;AAWAG,EAAAA,SAAS;AACV,CAbQ,EAaN,EAbM,CAAT;AAeF,OAAO,MAAMI,GAAG,GAAG,MAAM;AACvBD,EAAAA,OAAO,CAACE,GAAR,CAAYT,OAAZ;AACAO,EAAAA,OAAO,CAACE,GAAR,CAAYP,IAAZ;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZM;KAAMM,G","sourcesContent":["import { BrowserRouter as Router } from 'react-router-dom';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Block, getBlocks } from './blocks';\n\nimport { Header } from './components/Header/Header';\nimport { InfoPanel } from './components/InfoPanel/InfoPanel';\nimport { ImageGrid } from './components/ImageGrid/ImageGrid';\nimport { useEffect, useState } from 'react';\n\nconst [loading, setLoading] = useState(true);\n  const [data, setData] = useState<Block | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const blocksData = await getBlocks();\n        setData(blocksData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\nexport const App = () => {\n  console.log(loading);\n  console.log(data);\n  return (\n    <Router>\n      <Header />\n      <main>\n        <ImageGrid />\n        <InfoPanel />\n      </main>\n    </Router>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}